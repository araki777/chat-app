generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model rooms {
  id         String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at DateTime?  @default(now()) @db.Timestamptz(6)
  room_name  String?
  capacity   Int?       @default(1)
  isRelease  Boolean?   @default(false)
  user_id    String?    @db.Uuid
  updated_at DateTime?  @default(now()) @db.Timestamptz(6)
  black_list String[]
  users      users?     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  messages   messages[]
}

model users {
  id             String     @id @db.Uuid
  email          String
  user_name      String?
  avatar_url     String?
  created_at     DateTime?  @default(now()) @db.Timestamptz(6)
  updated_at     DateTime?  @default(now()) @db.Timestamptz(6)
  join_room_list String[]
  session_id     String?    @db.Uuid
  messages       messages[]
  rooms          rooms[]
}

model messages {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
  message    String?
  user_id    String?   @db.Uuid
  room_id    String?   @db.Uuid
  rooms      rooms?    @relation(fields: [room_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users      users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
